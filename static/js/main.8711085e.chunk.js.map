{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","startTimer","setState","console","log","toLocaleTimeString","this","window","setInterval","prevProps","name","props","clearInterval","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,EAsBEC,WAAa,WACX,IAAMH,EAAO,IAAIC,KAEjB,EAAKG,SAAS,CAAEJ,SAGhBK,QAAQC,IAAIN,EAAKO,uBA5BrB,uDAOE,WACEC,KAAKN,QAAUO,OAAOC,YAAYF,KAAKL,WAAY,OARvD,gCAWE,SAAmBQ,GACbA,EAAUC,OAASJ,KAAKK,MAAMD,MAEhCP,QAAQC,IAAR,uBAA4BK,EAAUC,KAAtC,eAAiDJ,KAAKK,MAAMD,SAdlE,kCAkBE,WACEE,cAAcN,KAAKN,WAnBvB,oBA+BE,WACE,OACE,sBAAKa,UAAU,QAAf,UACE,iCAASP,KAAKK,MAAMD,OACnB,YACAJ,KAAKT,MAAMC,KAAKO,4BApCzB,GAA2BS,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACExB,MAAe,CACbyB,UAAU,EACVC,UAAWR,KAHf,uDAME,WAAqB,IAAD,OAClBP,aAAY,WACV,EAAKN,SAAS,CAAEqB,UAAWR,QAC1B,MACHS,SAASC,iBAAiB,eAAe,WACvC,EAAKvB,SAAS,CAAEoB,UAAU,OAE5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKvB,SAAS,CAAEoB,UAAU,SAdhC,oBAkBE,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,6CACCP,KAAKT,MAAMyB,UACV,cAAC,EAAD,CAAOZ,KAAMJ,KAAKT,MAAM0B,mBAvBlC,GAAyBT,aA8BVO,IC1CfK,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.8711085e.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(this.startTimer, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  startTimer = () => {\n    const date = new Date();\n\n    this.setState({ date });\n\n    // eslint-disable-next-line no-console\n    console.log(date.toLocaleTimeString());\n  };\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <strong>{this.props.name}</strong>\n        {' time is '}\n        {this.state.date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && (\n          <Clock name={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}